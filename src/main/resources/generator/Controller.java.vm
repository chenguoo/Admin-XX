package ${package}.controller;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.javamokey.adminxx.common.util.R;
import com.javamokey.adminxx.common.util.StringUtil;
import com.javamokey.adminxx.common.validator.ValidatorUtils;
import ${package}.entity.${className};
import ${package}.service.${className}Service;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;

import ${package}.entity.${className};
import ${package}.service.${className}Service;


/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {
	@Autowired
	private ${className}Service ${classname}Service;
	
	/**
	 * 列表
	 */
	@RequestMapping("/list")
	@RequiresPermissions("${classname}:list")
	public R list(@RequestParam Map<String, String> params){

        //查询列表数据
        Page<${className}> page = new Page<>(Integer.parseInt(params.get("current")), Integer.parseInt(params.get("size")));

        //查询条件
        EntityWrapper<${className}> wrapper = new EntityWrapper<>();
        /*具体查询条件在这里借助EntityWrapper编写,如:*/
        /*wrapper.like(StringUtil.isNotEmpty(params.get("beanName")), "bean_name", params.get("beanName"));*/

        page = ${classname}Service.selectPage(page, wrapper);

        return R.ok().put("page", page);
	}
	
	
	/**
	 * 查询单个信息
	 */
	@RequestMapping("/info/{${pk.attrname}}")
	@RequiresPermissions("${classname}:info")
	public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className} ${classname} = ${classname}Service.selectById(${pk.attrname});
		
		return R.ok().put("${classname}", ${classname});
	}
	
	/**
	 * 保存
	 */
	@RequestMapping("/save")
	@RequiresPermissions("${classname}:save")
	public R save(@RequestBody ${className} ${classname}){

        //ValidatorUtils.validateEntity(${classname});

		${classname}Service.insert(${classname});
		
		return R.ok();
	}
	
	/**
	 * 修改
	 */
	@RequestMapping("/update")
	@RequiresPermissions("${classname}:update")
	public R update(@RequestBody ${className} ${classname}){

        //ValidatorUtils.validateEntity(scheduleJob);

		${classname}Service.updateById(${classname});
		
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@RequestMapping("/delete")
	@RequiresPermissions("${classname}:delete")
	public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){

        ArrayList<Long> idLists = new ArrayList<>(Arrays.asList(${pk.attrname}s));

		${classname}Service.deleteBatchIds(idLists);

		return R.ok();
	}
	
}
